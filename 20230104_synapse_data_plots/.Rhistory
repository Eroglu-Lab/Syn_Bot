puncta_analyzer_data$mean_normalized_count[which(grepl("control", puncta_analyzer_data$condition))] <- mean(puncta_analyzer_data$normalized_count[which(grepl("control", puncta_analyzer_data$condition))])
puncta_analyzer_data$mean_normalized_count[which(grepl("ACM", puncta_analyzer_data$condition))] <- mean(puncta_analyzer_data$normalized_count[which(grepl("ACM", puncta_analyzer_data$condition))])
#normalize count
synquant_data$normalized_count <- 0
synquant_data$normalized_count <- synquant_data$Colocalized.Puncta.Count/synquant_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl("control", synquant_raw_means$condition))]
#calculate sem = sd/sqrt(n)
synquant_sem_control <- sd(synquant_data$normalized_count[which(grepl("control", synquant_data$condition))])/sqrt(length(synquant_data$Image[which(grepl("control", synquant_data$condition))]))
synquant_sem_acm <- sd(synquant_data$normalized_count[which(grepl("ACM", synquant_data$condition))])/sqrt(length(synquant_data$Image[which(grepl("ACM", synquant_data$condition))]))
synquant_data$sem <- 0
synquant_data$sem[which(grepl("control", synquant_data$condition))] <- synquant_sem_control
synquant_data$sem[which(grepl("ACM", synquant_data$condition))] <- synquant_sem_acm
synquant_data$mean_normalized_count <- 0
synquant_data$mean_normalized_count[which(grepl("control", synquant_data$condition))] <- mean(synquant_data$normalized_count[which(grepl("control", synquant_data$condition))])
synquant_data$mean_normalized_count[which(grepl("ACM", synquant_data$condition))] <- mean(synquant_data$normalized_count[which(grepl("ACM", synquant_data$condition))])
t.test(normalized_count ~ condition, manual_synbot_data)
t.test(normalized_count ~ condition, ilastik_data)
t.test(normalized_count ~ condition, puncta_analyzer_data)
t.test(normalized_count ~ condition, synquant_data)
var.test(filter(manual_synbot_data, condition == "control")$normalized_count, filter(ilastik_data, condition == "control")$normalized_count)
var.test(filter(manual_synbot_data, condition == "ACM")$normalized_count, filter(ilastik_data, condition == "ACM")$normalized_count)
manual_plot.df <- summarize(group_by(manual_synbot_data, condition), mean(normalized_count))
manual_plot.df$sem <- 0
manual_plot.df$sem[which(grepl("control", manual_plot.df$condition))] <- manual_sem_control
manual_plot.df$sem[which(grepl("ACM", manual_plot.df$condition))] <- manual_sem_acm
ggplot(manual_plot.df, aes(x = condition, y = `mean(normalized_count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_data, aes(x = condition, y = normalized_count)) +
labs(title = "in vitro Synapses Manual SynBot", y = "Colocalized Puncta per Image")+
annotate("text", x = 1, y = 3, label = "p<0.001") +
geom_errorbar(aes(ymin=`mean(normalized_count)`-sem, ymax=`mean(normalized_count)`+sem), width=.2,
position=position_dodge(.9))
#ggsave("invitro_inhibitory_manual.pdf", width = 3.5, height = 5)
ilastik_plot.df <- summarize(group_by(ilastik_data, condition), mean(normalized_count))
ilastik_plot.df$sem <- 0
ilastik_plot.df$sem[which(grepl("control", ilastik_plot.df$condition))] <- ilastik_sem_control
ilastik_plot.df$sem[which(grepl("ACM", ilastik_plot.df$condition))] <- ilastik_sem_acm
ggplot(ilastik_plot.df, aes(x = condition, y = `mean(normalized_count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = ilastik_data, aes(x = condition, y = normalized_count)) +
labs(title = "in vitro Synapses Ilastik SynBot", y = "Colocalized Puncta per Image")+
annotate("text", x = 1, y = 1.5, label = "p<0.001") +
geom_errorbar(aes(ymin=`mean(normalized_count)`-sem, ymax=`mean(normalized_count)`+sem), width=.2,
position=position_dodge(.9))
#ggsave("invitro_inhibitory_ilastik.pdf", width = 3.5, height = 5)
puncta_analyzer_plot.df <- summarize(group_by(puncta_analyzer_data, condition), mean(normalized_count))
puncta_analyzer_plot.df$sem <- 0
puncta_analyzer_plot.df$sem[which(grepl("control", puncta_analyzer_plot.df$condition))] <- puncta_analyzer_sem_control
puncta_analyzer_plot.df$sem[which(grepl("ACM", puncta_analyzer_plot.df$condition))] <- puncta_analyzer_sem_acm
ggplot(puncta_analyzer_plot.df, aes(x = condition, y = `mean(normalized_count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = puncta_analyzer_data, aes(x = condition, y = normalized_count)) +
labs(title = "in vitro Synapses Puncta Analyzer", y = "Colocalized Puncta per Image")+
annotate("text", x = 1, y = 2, label = "p<0.001") +
geom_errorbar(aes(ymin=`mean(normalized_count)`-sem, ymax=`mean(normalized_count)`+sem), width=.2,
position=position_dodge(.9))
#ggsave("invitro_inhibitory_puncta_analyzer.pdf", width = 3.5, height = 5)
synquant_plot.df <- summarize(group_by(synquant_data, condition), mean(normalized_count))
synquant_plot.df$sem <- 0
synquant_plot.df$sem[which(grepl("control", synquant_plot.df$condition))] <- synquant_sem_control
synquant_plot.df$sem[which(grepl("ACM", synquant_plot.df$condition))] <- synquant_sem_acm
ggplot(synquant_plot.df, aes(x = condition, y = `mean(normalized_count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = synquant_data, aes(x = condition, y = normalized_count)) +
labs(title = "in vitro Synapses synquant", y = "Colocalized Puncta per Image")+
annotate("text", x = 1, y = 1.5, label = "p<0.001") +
geom_errorbar(aes(ymin=`mean(normalized_count)`-sem, ymax=`mean(normalized_count)`+sem), width=.2,
position=position_dodge(.9))
#ggsave("invitro_inhibitory_synquant.pdf", width = 3.5, height = 5)
#combine data into one data frame
combined_data <- rbind(manual_synbot_data, ilastik_data)
combined_data <- rbind(combined_data, puncta_analyzer_data)
combined_data <- rbind(combined_data, synquant_data)
ggplot(data= combined_data, aes(x=condition, y=normalized_count)) +
geom_bar(stat = "summary", fill = NA, color = "black") +
facet_grid(cols = vars(analysis_type)) +
geom_jitter(size = 0.5, width = 0.1, aes(color = condition)) +
geom_errorbar(aes(ymin=mean_normalized_count-sem, ymax=mean_normalized_count+sem), width=.2,
position=position_dodge(.9), size = 0.25) +
labs(y = "Fold Change in synapse number \n (colocalization of bassoon and gephyrin)")+
theme(axis.text=element_text(size=8),
axis.title=element_text(size=8,face="bold")) +
scale_color_manual(values = c("black", "black")) + theme(legend.position = "none")
#ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_5_in_vitro/invitro_inhibitory_faceted.pdf", width = 4.5, height = 2.5)
model_1 <- aov(normalized_count~analysis_type*condition, data = combined_data)
summary(model_1)
tukey_1 <- TukeyHSD(model_1)
tukey_1
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Red.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Red.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik')) + ylab("Gephyrin (Red) Puncta Count") +  theme(axis.text = element_text(size = 6))
#ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_red_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Green.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Green.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik')) + ylab("Bassoon (Green) Puncta Count") +  theme(axis.text = element_text(size = 6))
#ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_green_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Colocalized.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Colocalized.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik')) + ylab("Colocalized Puncta Count") +  theme(axis.text = element_text(size = 6))
#ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_coloc_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Red.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Red.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik', 'synquant')) + ylab("Gephyrin (Red) Puncta Count") +  theme(axis.text = element_text(size = 6))
#ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_red_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Green.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Green.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik', 'synquant')) + ylab("Bassoon (Green) Puncta Count") +  theme(axis.text = element_text(size = 6))
#ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_green_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Colocalized.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Colocalized.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik', 'synquant')) + ylab("Colocalized Puncta Count") +  theme(axis.text = element_text(size = 6))
#ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_coloc_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Red.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Red.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik', 'synquant')) + ylab("Gephyrin (Red) Puncta Count") +  theme(axis.text = element_text(size = 6))
ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_red_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Green.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Green.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik', 'synquant')) + ylab("Bassoon (Green) Puncta Count") +  theme(axis.text = element_text(size = 6))
ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_green_line_plot_raw.pdf", width = 5, height = 2.75)
gg.base <- ggplot(combined_data, aes(x = analysis_type, y = Colocalized.Puncta.Count))
gg.base + geom_line(aes(group = image_id, linetype = condition)) + geom_point(aes(group = image_id, shape = condition)) + stat_summary(mapping = aes(x = analysis_type, y = Colocalized.Puncta.Count), fill = NA , geom = 'col', fun.y = 'mean', color = 'black') + scale_color_viridis_b() + facet_grid(cols = vars(condition))+ scale_x_discrete(labels=c('puncta \n analyzer', 'manual \n synbot', 'ilastik', 'synquant')) + ylab("Colocalized Puncta Count") +  theme(axis.text = element_text(size = 6))
ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_s1_line_plots/invitro_inhibitory_coloc_line_plot_raw.pdf", width = 5, height = 2.75)
knitr::opts_chunk$set(echo = TRUE)
sessionInfo()
library(tidyverse)
library(ggplot2)
library(agricolae)
library(ggsignif)
library(multcomp)
library(nlme)
sessionInfo()
BiocManager::install("edgeR")
library(edgeR)
BiocManager::install("MAST")
library(MAST)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(agricolae)
manual_synbot_circle <- read.csv("circle_v_pixel/Summary_circle.csv")
manual_synbot_pixel <- read.csv("circle_v_pixel/Summary_pixel.csv")
#label data with the analysis type used
manual_synbot_circle$analysis_type <- "manual_synbot_circle"
manual_synbot_pixel$analysis_type <- "manual_synbot_pixel"
#make analysis_type a factor so that it always plots in puncta_analyzer, manual, ilastik order
manual_synbot_circle$analysis_type <- factor(manual_synbot_circle$analysis_type, levels = c("manual_synbot_circle", "manual_synbot_pixel"))
#initialize condition
manual_synbot_circle$condition <- "WT"
manual_synbot_pixel$condition <- "WT"
#label data with experimental condition
manual_synbot_circle[which(grepl("*WT*", manual_synbot_circle$Image)),]$condition <- "WT"
manual_synbot_circle[which(grepl("*KO*", manual_synbot_circle$Image)),]$condition <- "KO"
#make condition a factor so that it always plots in WT then KO order
manual_synbot_circle$condition <- factor(manual_synbot_circle$condition, levels = c("WT", "KO"))
manual_synbot_pixel[which(grepl("*WT*", manual_synbot_pixel$Image)),]$condition <- "WT"
manual_synbot_pixel[which(grepl("*KO*", manual_synbot_pixel$Image)),]$condition <- "KO"
manual_synbot_pixel$condition <- factor(manual_synbot_pixel$condition, levels = c("WT", "KO"))
#TODO: Make sure this is numbering correctly
#add image_id
manual_synbot_pixel$image_id <- seq.int(nrow(manual_synbot_pixel))
manual_synbot_circle$image_id <- seq.int(nrow(manual_synbot_circle))
#initialize pair
manual_synbot_circle$pair <- 1
manual_synbot_pixel$pair <- 1
#add pair number
manual_synbot_circle[which(grepl("Pair1", manual_synbot_circle$Image)),]$pair <- 1
manual_synbot_circle[which(grepl("Pair2", manual_synbot_circle$Image)),]$pair <- 2
manual_synbot_circle[which(grepl("Pair3", manual_synbot_circle$Image)),]$pair <- 3
manual_synbot_pixel[which(grepl("Pair1", manual_synbot_pixel$Image)),]$pair <- 1
manual_synbot_pixel[which(grepl("Pair2", manual_synbot_pixel$Image)),]$pair <- 2
manual_synbot_pixel[which(grepl("Pair3", manual_synbot_pixel$Image)),]$pair <- 3
#calculate condition means for each pair
manual_circle_raw_means <- summarize(group_by(manual_synbot_circle, condition, pair), mean(Colocalized.Puncta.Count))
manual_pixel_raw_means <- summarize(group_by(manual_synbot_pixel, condition, pair), mean(Colocalized.Puncta.Count))
#normalize count by pair
manual_synbot_circle$normalized_count <- 0
manual_synbot_circle[which(grepl(1, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(2, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(3, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
#normalize count by pair
manual_synbot_pixel$normalized_count <- 0
manual_synbot_pixel[which(grepl(1, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(2, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(3, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
t.test(`mean(Colocalized.Puncta.Count)` ~ condition, manual_circle_raw_means)
t.test(`mean(Colocalized.Puncta.Count)` ~ condition, manual_pixel_raw_means)
manual_synbot_circle_grouped <- nlme::groupedData(Colocalized.Puncta.Count ~ condition | pair, data = manual_synbot_circle)
manual_synbot_circle_lme <- nlme::lme(manual_synbot_circle_grouped)
#manual_synbot_circle_lme
#summary(manual_synbot_circle_lme)
#anova(manual_synbot_circle_lme)
manual_synbot_circle_tukeys <- summary(glht(manual_synbot_circle_lme, linfct=mcp(condition="Tukey")))
install.packages("agricolae")
library(tidyverse)
library(ggplot2)
library(agricolae)
library(ggsignif)
install.packages("ggsignif")
library(tidyverse)
library(ggplot2)
library(agricolae)
library(ggsignif)
library(multcomp)
install.packages("multcomp")
library(tidyverse)
library(ggplot2)
library(agricolae)
library(ggsignif)
library(multcomp)
library(nlme)
manual_synbot_circle <- read.csv("circle_v_pixel/Summary_circle.csv")
manual_synbot_pixel <- read.csv("circle_v_pixel/Summary_pixel.csv")
#label data with the analysis type used
manual_synbot_circle$analysis_type <- "manual_synbot_circle"
manual_synbot_pixel$analysis_type <- "manual_synbot_pixel"
#make analysis_type a factor so that it always plots in puncta_analyzer, manual, ilastik order
manual_synbot_circle$analysis_type <- factor(manual_synbot_circle$analysis_type, levels = c("manual_synbot_circle", "manual_synbot_pixel"))
#initialize condition
manual_synbot_circle$condition <- "WT"
manual_synbot_pixel$condition <- "WT"
#label data with experimental condition
manual_synbot_circle[which(grepl("*WT*", manual_synbot_circle$Image)),]$condition <- "WT"
manual_synbot_circle[which(grepl("*KO*", manual_synbot_circle$Image)),]$condition <- "KO"
#make condition a factor so that it always plots in WT then KO order
manual_synbot_circle$condition <- factor(manual_synbot_circle$condition, levels = c("WT", "KO"))
manual_synbot_pixel[which(grepl("*WT*", manual_synbot_pixel$Image)),]$condition <- "WT"
manual_synbot_pixel[which(grepl("*KO*", manual_synbot_pixel$Image)),]$condition <- "KO"
manual_synbot_pixel$condition <- factor(manual_synbot_pixel$condition, levels = c("WT", "KO"))
#TODO: Make sure this is numbering correctly
#add image_id
manual_synbot_pixel$image_id <- seq.int(nrow(manual_synbot_pixel))
manual_synbot_circle$image_id <- seq.int(nrow(manual_synbot_circle))
#initialize pair
manual_synbot_circle$pair <- 1
manual_synbot_pixel$pair <- 1
#add pair number
manual_synbot_circle[which(grepl("Pair1", manual_synbot_circle$Image)),]$pair <- 1
manual_synbot_circle[which(grepl("Pair2", manual_synbot_circle$Image)),]$pair <- 2
manual_synbot_circle[which(grepl("Pair3", manual_synbot_circle$Image)),]$pair <- 3
manual_synbot_pixel[which(grepl("Pair1", manual_synbot_pixel$Image)),]$pair <- 1
manual_synbot_pixel[which(grepl("Pair2", manual_synbot_pixel$Image)),]$pair <- 2
manual_synbot_pixel[which(grepl("Pair3", manual_synbot_pixel$Image)),]$pair <- 3
#calculate condition means for each pair
manual_circle_raw_means <- summarize(group_by(manual_synbot_circle, condition, pair), mean(Colocalized.Puncta.Count))
manual_pixel_raw_means <- summarize(group_by(manual_synbot_pixel, condition, pair), mean(Colocalized.Puncta.Count))
#normalize count by pair
manual_synbot_circle$normalized_count <- 0
manual_synbot_circle[which(grepl(1, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(2, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(3, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
#normalize count by pair
manual_synbot_pixel$normalized_count <- 0
manual_synbot_pixel[which(grepl(1, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(2, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(3, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
library(tidyverse)
library(ggplot2)
library(agricolae)
library(ggsignif)
library(multcomp)
library(nlme)
manual_synbot_circle <- read.csv("circle_v_pixel/Summary_circle.csv")
manual_synbot_pixel <- read.csv("circle_v_pixel/Summary_pixel.csv")
#label data with the analysis type used
manual_synbot_circle$analysis_type <- "manual_synbot_circle"
manual_synbot_pixel$analysis_type <- "manual_synbot_pixel"
#make analysis_type a factor so that it always plots in puncta_analyzer, manual, ilastik order
manual_synbot_circle$analysis_type <- factor(manual_synbot_circle$analysis_type, levels = c("manual_synbot_circle", "manual_synbot_pixel"))
#initialize condition
manual_synbot_circle$condition <- "WT"
manual_synbot_pixel$condition <- "WT"
#label data with experimental condition
manual_synbot_circle[which(grepl("*WT*", manual_synbot_circle$Image)),]$condition <- "WT"
manual_synbot_circle[which(grepl("*KO*", manual_synbot_circle$Image)),]$condition <- "KO"
#make condition a factor so that it always plots in WT then KO order
manual_synbot_circle$condition <- factor(manual_synbot_circle$condition, levels = c("WT", "KO"))
manual_synbot_pixel[which(grepl("*WT*", manual_synbot_pixel$Image)),]$condition <- "WT"
manual_synbot_pixel[which(grepl("*KO*", manual_synbot_pixel$Image)),]$condition <- "KO"
manual_synbot_pixel$condition <- factor(manual_synbot_pixel$condition, levels = c("WT", "KO"))
#TODO: Make sure this is numbering correctly
#add image_id
manual_synbot_pixel$image_id <- seq.int(nrow(manual_synbot_pixel))
manual_synbot_circle$image_id <- seq.int(nrow(manual_synbot_circle))
#initialize pair
manual_synbot_circle$pair <- 1
manual_synbot_pixel$pair <- 1
#add pair number
manual_synbot_circle[which(grepl("Pair1", manual_synbot_circle$Image)),]$pair <- 1
manual_synbot_circle[which(grepl("Pair2", manual_synbot_circle$Image)),]$pair <- 2
manual_synbot_circle[which(grepl("Pair3", manual_synbot_circle$Image)),]$pair <- 3
manual_synbot_pixel[which(grepl("Pair1", manual_synbot_pixel$Image)),]$pair <- 1
manual_synbot_pixel[which(grepl("Pair2", manual_synbot_pixel$Image)),]$pair <- 2
manual_synbot_pixel[which(grepl("Pair3", manual_synbot_pixel$Image)),]$pair <- 3
#calculate condition means for each pair
manual_circle_raw_means <- summarize(group_by(manual_synbot_circle, condition, pair), mean(Colocalized.Puncta.Count))
manual_pixel_raw_means <- summarize(group_by(manual_synbot_pixel, condition, pair), mean(Colocalized.Puncta.Count))
#normalize count by pair
manual_synbot_circle$normalized_count <- 0
manual_synbot_circle[which(grepl(1, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(2, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(3, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
#normalize count by pair
manual_synbot_pixel$normalized_count <- 0
manual_synbot_pixel[which(grepl(1, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(2, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(3, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
t.test(`mean(Colocalized.Puncta.Count)` ~ condition, manual_circle_raw_means)
t.test(`mean(Colocalized.Puncta.Count)` ~ condition, manual_pixel_raw_means)
manual_synbot_circle_grouped <- nlme::groupedData(Colocalized.Puncta.Count ~ condition | pair, data = manual_synbot_circle)
manual_synbot_circle_lme <- nlme::lme(manual_synbot_circle_grouped)
#manual_synbot_circle_lme
#summary(manual_synbot_circle_lme)
#anova(manual_synbot_circle_lme)
manual_synbot_circle_tukeys <- summary(glht(manual_synbot_circle_lme, linfct=mcp(condition="Tukey")))
#manual_synbot_circle_tukeys
manual_synbot_circle_tukeysPH <- data.frame(as.character(row.names(manual_synbot_circle_tukeys$linfct)), manual_synbot_circle_tukeys$test$pvalues)
manual_circle_p_value <- manual_synbot_circle_tukeysPH$manual_synbot_circle_tukeys.test.pvalues[1]
print(paste("manual circle p value: ", manual_circle_p_value))
manual_synbot_pixel_grouped <- nlme::groupedData(Colocalized.Puncta.Count ~ condition | pair, data = manual_synbot_pixel)
manual_synbot_pixel_lme <- nlme::lme(manual_synbot_pixel_grouped)
#manual_synbot_pixel_lme
#summary(manual_synbot_pixel_lme)
#anova(manual_synbot_pixel_lme)
manual_synbot_pixel_tukeys <- summary(glht(manual_synbot_pixel_lme, linfct=mcp(condition="Tukey")))
#manual_synbot_pixel_tukeys
manual_synbot_pixel_tukeysPH <- data.frame(as.character(row.names(manual_synbot_pixel_tukeys$linfct)), manual_synbot_pixel_tukeys$test$pvalues)
manual_pixel_p_value <- manual_synbot_pixel_tukeysPH$manual_synbot_pixel_tukeys.test.pvalues[1]
print(paste("manual pixel p value: ", manual_pixel_p_value))
library(tidyverse)
library(ggplot2)
library(agricolae)
library(ggsignif)
library(multcomp)
library(nlme)
manual_synbot_circle <- read.csv("circle_v_pixel/Summary_circle.csv")
manual_synbot_pixel <- read.csv("circle_v_pixel/Summary_pixel.csv")
#label data with the analysis type used
manual_synbot_circle$analysis_type <- "manual_synbot_circle"
manual_synbot_pixel$analysis_type <- "manual_synbot_pixel"
#make analysis_type a factor so that it always plots in puncta_analyzer, manual, ilastik order
manual_synbot_circle$analysis_type <- factor(manual_synbot_circle$analysis_type, levels = c("manual_synbot_circle", "manual_synbot_pixel"))
#initialize condition
manual_synbot_circle$condition <- "WT"
manual_synbot_pixel$condition <- "WT"
#label data with experimental condition
manual_synbot_circle[which(grepl("*WT*", manual_synbot_circle$Image)),]$condition <- "WT"
manual_synbot_circle[which(grepl("*KO*", manual_synbot_circle$Image)),]$condition <- "KO"
#make condition a factor so that it always plots in WT then KO order
manual_synbot_circle$condition <- factor(manual_synbot_circle$condition, levels = c("WT", "KO"))
manual_synbot_pixel[which(grepl("*WT*", manual_synbot_pixel$Image)),]$condition <- "WT"
manual_synbot_pixel[which(grepl("*KO*", manual_synbot_pixel$Image)),]$condition <- "KO"
manual_synbot_pixel$condition <- factor(manual_synbot_pixel$condition, levels = c("WT", "KO"))
#TODO: Make sure this is numbering correctly
#add image_id
manual_synbot_pixel$image_id <- seq.int(nrow(manual_synbot_pixel))
manual_synbot_circle$image_id <- seq.int(nrow(manual_synbot_circle))
#initialize pair
manual_synbot_circle$pair <- 1
manual_synbot_pixel$pair <- 1
#add pair number
manual_synbot_circle[which(grepl("Pair1", manual_synbot_circle$Image)),]$pair <- 1
manual_synbot_circle[which(grepl("Pair2", manual_synbot_circle$Image)),]$pair <- 2
manual_synbot_circle[which(grepl("Pair3", manual_synbot_circle$Image)),]$pair <- 3
manual_synbot_pixel[which(grepl("Pair1", manual_synbot_pixel$Image)),]$pair <- 1
manual_synbot_pixel[which(grepl("Pair2", manual_synbot_pixel$Image)),]$pair <- 2
manual_synbot_pixel[which(grepl("Pair3", manual_synbot_pixel$Image)),]$pair <- 3
#calculate condition means for each pair
manual_circle_raw_means <- summarize(group_by(manual_synbot_circle, condition, pair), mean(Colocalized.Puncta.Count))
manual_pixel_raw_means <- summarize(group_by(manual_synbot_pixel, condition, pair), mean(Colocalized.Puncta.Count))
#normalize count by pair
manual_synbot_circle$normalized_count <- 0
manual_synbot_circle[which(grepl(1, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(2, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
manual_synbot_circle[which(grepl(3, manual_synbot_circle$pair)),]$normalized_count <- manual_synbot_circle$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_circle$pair))]/manual_circle_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_circle_raw_means$pair) & grepl("WT", manual_circle_raw_means$condition))]
#normalize count by pair
manual_synbot_pixel$normalized_count <- 0
manual_synbot_pixel[which(grepl(1, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(1, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(1, manual_circle_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(2, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(2, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(2, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
manual_synbot_pixel[which(grepl(3, manual_synbot_pixel$pair)),]$normalized_count <- manual_synbot_pixel$Colocalized.Puncta.Count[which(grepl(3, manual_synbot_pixel$pair))]/manual_pixel_raw_means$`mean(Colocalized.Puncta.Count)`[which(grepl(3, manual_pixel_raw_means$pair) & grepl("WT", manual_pixel_raw_means$condition))]
t.test(`mean(Colocalized.Puncta.Count)` ~ condition, manual_circle_raw_means)
t.test(`mean(Colocalized.Puncta.Count)` ~ condition, manual_pixel_raw_means)
manual_synbot_circle_grouped <- nlme::groupedData(Colocalized.Puncta.Count ~ condition | pair, data = manual_synbot_circle)
manual_synbot_circle_lme <- nlme::lme(manual_synbot_circle_grouped)
#manual_synbot_circle_lme
#summary(manual_synbot_circle_lme)
#anova(manual_synbot_circle_lme)
manual_synbot_circle_tukeys <- summary(glht(manual_synbot_circle_lme, linfct=mcp(condition="Tukey")))
#manual_synbot_circle_tukeys
manual_synbot_circle_tukeysPH <- data.frame(as.character(row.names(manual_synbot_circle_tukeys$linfct)), manual_synbot_circle_tukeys$test$pvalues)
manual_circle_p_value <- manual_synbot_circle_tukeysPH$manual_synbot_circle_tukeys.test.pvalues[1]
print(paste("manual circle p value: ", manual_circle_p_value))
manual_synbot_pixel_grouped <- nlme::groupedData(Colocalized.Puncta.Count ~ condition | pair, data = manual_synbot_pixel)
manual_synbot_pixel_lme <- nlme::lme(manual_synbot_pixel_grouped)
#manual_synbot_pixel_lme
#summary(manual_synbot_pixel_lme)
#anova(manual_synbot_pixel_lme)
manual_synbot_pixel_tukeys <- summary(glht(manual_synbot_pixel_lme, linfct=mcp(condition="Tukey")))
#manual_synbot_pixel_tukeys
manual_synbot_pixel_tukeysPH <- data.frame(as.character(row.names(manual_synbot_pixel_tukeys$linfct)), manual_synbot_pixel_tukeys$test$pvalues)
manual_pixel_p_value <- manual_synbot_pixel_tukeysPH$manual_synbot_pixel_tukeys.test.pvalues[1]
print(paste("manual pixel p value: ", manual_pixel_p_value))
ggplot(summarize(group_by(manual_synbot_circle, condition), mean(Colocalized.Puncta.Count)), aes(x = condition, y = `mean(Colocalized.Puncta.Count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_circle, aes(x = condition, y = Colocalized.Puncta.Count)) +
labs(title = "in vivo Synapses Manual SynBot Circle", y = "Colocalized Puncta per Image") +
annotate("text", x = 2, y = 2750)
ggplot(summarize(group_by(manual_synbot_circle, condition), mean(Colocalized.Puncta.Count)), aes(x = condition, y = `mean(Colocalized.Puncta.Count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_circle, aes(x = condition, y = Colocalized.Puncta.Count)) +
labs(title = "in vivo Synapses Manual SynBot Circle", y = "Colocalized Puncta per Image") +
annotate(label = "text", x = 2, y = 2750)
ggplot(summarize(group_by(manual_synbot_circle, condition), mean(Colocalized.Puncta.Count)), aes(x = condition, y = `mean(Colocalized.Puncta.Count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_circle, aes(x = condition, y = Colocalized.Puncta.Count)) +
labs(title = "in vivo Synapses Manual SynBot Circle", y = "Colocalized Puncta per Image")
#annotate("text", x = 2, y = 2750)
#ggsave("invivo_a2d1_manual.pdf", width = 3.5, height = 5)
ggplot(summarize(group_by(manual_synbot_pixel, condition), mean(Colocalized.Puncta.Count)), aes(x = condition, y = `mean(Colocalized.Puncta.Count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_pixel, aes(x = condition, y = Colocalized.Puncta.Count)) +
labs(title = "in vivo Synapses Manual SynBot Pixel", y = "Colocalized Puncta per Image") +
annotate("text", x = 2, y = 800)
ggplot(summarize(group_by(manual_synbot_circle, condition), mean(Colocalized.Puncta.Count)), aes(x = condition, y = `mean(Colocalized.Puncta.Count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_circle, aes(x = condition, y = Colocalized.Puncta.Count)) +
labs(title = "in vivo Synapses Manual SynBot Circle", y = "Colocalized Puncta per Image")
#annotate("text", x = 2, y = 2750)
#ggsave("invivo_a2d1_manual.pdf", width = 3.5, height = 5)
ggplot(summarize(group_by(manual_synbot_pixel, condition), mean(Colocalized.Puncta.Count)), aes(x = condition, y = `mean(Colocalized.Puncta.Count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_pixel, aes(x = condition, y = Colocalized.Puncta.Count)) +
labs(title = "in vivo Synapses Manual SynBot Pixel", y = "Colocalized Puncta per Image")
#annotate("text", x = 2, y = 800)
#ggsave("invivo_a2d1_puncta_analyzer.pdf", width = 3.5, height = 5)
#calculate normalized condition means for each pair
manual_circle_norm_means <- summarize(group_by(manual_synbot_circle, condition, pair), mean(normalized_count))
manual_synbot_circle_grouped <- nlme::groupedData(normalized_count ~ condition | pair, data = manual_synbot_circle)
manual_synbot_circle_lme <- nlme::lme(manual_synbot_circle_grouped)
manual_synbot_circle_lme
summary(manual_synbot_circle_lme)
anova(manual_synbot_circle_lme)
manual_synbot_circle_tukeys <- summary(glht(manual_synbot_circle_lme, linfct=mcp(condition="Tukey")))
manual_synbot_circle_tukeys
manual_synbot_circle_tukeysPH <- data.frame(as.character(row.names(manual_synbot_circle_tukeys$linfct)), manual_synbot_circle_tukeys$test$pvalues)
#calculate sem = sd/sqrt(n)
manual_circle_sem_wt <- sd(manual_circle_norm_means$`mean(normalized_count)`[which(grepl("WT", manual_circle_norm_means$condition))])/sqrt(length(manual_circle_norm_means$condition[which(grepl("WT", manual_circle_norm_means$condition))]))
manual_circle_sem_ko <- sd(manual_circle_norm_means$`mean(normalized_count)`[which(grepl("KO", manual_circle_norm_means$condition))])/sqrt(length(manual_circle_norm_means$condition[which(grepl("KO", manual_circle_norm_means$condition))]))
manual_synbot_circle$sem <- 0
manual_synbot_circle$sem[which(grepl("WT", manual_synbot_circle$condition))] <- manual_circle_sem_wt
manual_synbot_circle$sem[which(grepl("KO", manual_synbot_circle$condition))] <- manual_circle_sem_ko
#add normalized count to data frame
manual_synbot_circle$mean_normalized_count <- 0
manual_synbot_circle$mean_normalized_count[which(grepl("WT", manual_synbot_circle$condition))] <- mean(manual_synbot_circle$normalized_count[which(grepl("WT", manual_synbot_circle$condition))])
manual_synbot_circle$mean_normalized_count[which(grepl("KO", manual_synbot_circle$condition))] <- mean(manual_synbot_circle$normalized_count[which(grepl("KO", manual_synbot_circle$condition))])
#calculate normalized condition means for each pair
manual_pixel_norm_means <- summarize(group_by(manual_synbot_pixel, condition, pair), mean(normalized_count))
manual_synbot_pixel_grouped <- nlme::groupedData(normalized_count ~ condition | pair, data = manual_synbot_pixel)
manual_synbot_pixel_lme <- nlme::lme(manual_synbot_pixel_grouped)
manual_synbot_pixel_lme
summary(manual_synbot_pixel_lme)
anova(manual_synbot_pixel_lme)
manual_synbot_pixel_tukeys <- summary(glht(manual_synbot_pixel_lme, linfct=mcp(condition="Tukey")))
manual_synbot_pixel_tukeys
manual_synbot_pixel_tukeysPH <- data.frame(as.character(row.names(manual_synbot_pixel_tukeys$linfct)), manual_synbot_pixel_tukeys$test$pvalues)
#calculate sem = sd/sqrt(n)
manual_pixel_sem_wt <- sd(manual_pixel_norm_means$`mean(normalized_count)`[which(grepl("WT", manual_pixel_norm_means$condition))])/sqrt(length(manual_pixel_norm_means$condition[which(grepl("WT", manual_pixel_norm_means$condition))]))
manual_pixel_sem_ko <- sd(manual_pixel_norm_means$`mean(normalized_count)`[which(grepl("KO", manual_pixel_norm_means$condition))])/sqrt(length(manual_pixel_norm_means$condition[which(grepl("KO", manual_pixel_norm_means$condition))]))
manual_synbot_pixel$sem <- 0
manual_synbot_pixel$sem[which(grepl("WT", manual_synbot_pixel$condition))] <- manual_pixel_sem_wt
manual_synbot_pixel$sem[which(grepl("KO", manual_synbot_pixel$condition))] <- manual_pixel_sem_ko
#add normalized count to data frame
manual_synbot_pixel$mean_normalized_count <- 0
manual_synbot_pixel$mean_normalized_count[which(grepl("WT", manual_synbot_pixel$condition))] <- mean(manual_synbot_pixel$normalized_count[which(grepl("WT", manual_synbot_pixel$condition))])
manual_synbot_pixel$mean_normalized_count[which(grepl("KO", manual_synbot_pixel$condition))] <- mean(manual_synbot_pixel$normalized_count[which(grepl("KO", manual_synbot_pixel$condition))])
manual_circle_plot.df <- summarize(group_by(manual_synbot_circle, condition), mean(normalized_count))
manual_circle_plot.df$sem <- 0
manual_circle_plot.df$sem[which(grepl("WT", manual_circle_plot.df$condition))] <- manual_circle_sem_wt
manual_circle_plot.df$sem[which(grepl("KO", manual_circle_plot.df$condition))] <- manual_circle_sem_ko
ggplot(manual_circle_plot.df, aes(x = condition, y = `mean(normalized_count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_circle, aes(x = condition, y = normalized_count), color = "darkgray") +
geom_point(data = manual_circle_norm_means, aes(x = condition, y = `mean(normalized_count)`), size = 5, position = position_dodge2(0.5)) +
labs(title = "in vivo Synapses Manual SynBot circle", y = "Colocalized Puncta per Image") +
annotate("text", x = 2, y = 1.3, label = "p<0.001") +
geom_errorbar(aes(ymin=`mean(normalized_count)`-sem, ymax=`mean(normalized_count)`+sem), width=.2)
manual_pixel_plot.df <- summarize(group_by(manual_synbot_pixel, condition), mean(normalized_count))
manual_pixel_plot.df$sem <- 0
manual_pixel_plot.df$sem[which(grepl("WT", manual_pixel_plot.df$condition))] <- manual_pixel_sem_wt
manual_pixel_plot.df$sem[which(grepl("KO", manual_pixel_plot.df$condition))] <- manual_pixel_sem_ko
ggplot(manual_pixel_plot.df, aes(x = condition, y = `mean(normalized_count)`)) +
geom_col(fill = NA, color = "black") +
geom_jitter(data = manual_synbot_pixel, aes(x = condition, y = normalized_count), color = "darkgray") +
geom_point(data = manual_pixel_norm_means, aes(x = condition, y = `mean(normalized_count)`), size = 5, position = position_dodge2(0.5)) +
labs(title = "in vivo Synapses Manual SynBot pixel", y = "Colocalized Puncta per Image") +
annotate("text", x = 2, y = 1.3, label = "p<0.001") +
geom_errorbar(aes(ymin=`mean(normalized_count)`-sem, ymax=`mean(normalized_count)`+sem), width=.2)
#combine data into one data frame
combined_data <- rbind(manual_synbot_circle, manual_synbot_pixel)
ggplot(data= combined_data, aes(x=condition, y=normalized_count)) +
geom_bar(stat = "summary", fill = NA, color = "black") +
facet_grid(cols = vars(analysis_type)) +
geom_jitter(size = 0.5, width = 0.1, aes(color = condition)) +
geom_point(data = summarize(group_by(combined_data, analysis_type, condition, pair), mean(normalized_count)), aes(x = condition, y = `mean(normalized_count)`, color = condition), size = 3, position = position_dodge2(0.5)) +
geom_errorbar(aes(ymin=mean_normalized_count-sem, ymax=mean_normalized_count+sem), width=.2,
position=position_dodge(.9)) +
labs(y = "Fold change in synapse number \n (colocalization of VGluT1 and PSD95)") +
scale_color_manual(values = c("black", "black")) + theme(legend.position = "none")
ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_6_in_vivo/20241106_circle_v_pixel.pdf", width = 6.5, height = 3.5)
#combine data into one data frame
combined_data <- rbind(manual_synbot_circle, manual_synbot_pixel)
ggplot(data= combined_data, aes(x=condition, y=normalized_count)) +
geom_bar(stat = "summary", fill = NA, color = "black") +
facet_grid(cols = vars(analysis_type)) +
geom_jitter(size = 0.5, width = 0.1, aes(color = condition)) +
geom_point(data = summarize(group_by(combined_data, analysis_type, condition, pair), mean(normalized_count)), aes(x = condition, y = `mean(normalized_count)`, color = condition), size = 3, position = position_dodge2(0.5)) +
geom_errorbar(aes(ymin=mean_normalized_count-sem, ymax=mean_normalized_count+sem), width=.2,
position=position_dodge(.9)) +
labs(y = "Fold change in synapse number \n (colocalization of VGluT1 and PSD95)") +
scale_color_manual(values = c("red", "red")) + theme(legend.position = "none")
ggsave("F:/Savage_Dropbox/Duke Research Team Dropbox/Justin Savage/Team_Syn_Bot/20240318_figures/figure_6_in_vivo/20241106_circle_v_pixel.pdf", width = 6.5, height = 3.5)
